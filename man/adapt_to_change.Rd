% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adapt_to_change.R
\encoding{UTF-8}
\name{adapt_to_change}
\alias{adapt_to_change}
\title{Modifie une data frame pour prendre en compte les changements de géographie}
\usage{
adapt_to_change(
  data,
  from = NULL,
  to = NULL,
  sum_cols = NULL,
  mean_cols = NULL,
  cat_cols = NULL,
  weight_from = NULL,
  weight_to = NULL,
  id_cols = NULL,
  reduce = TRUE,
  infos = FALSE
)
}
\arguments{
\item{data}{Une data frame.}

\item{from}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonne de la géographie initiale. Par défaut, \code{NULL} : les fusions ne sont pas traitées.}

\item{to}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonne de la géographie finale. Par défaut, \code{NULL} : les scissions ne sont pas traitées.}

\item{sum_cols}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonnes des sommes à recalculer. Par défaut, \code{NULL}.}

\item{mean_cols}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonnes de moyennes à recalculer. Par défaut, \code{NULL}.}

\item{cat_cols}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonnes des catégories pour lesquelles on détermine la modalité majoritaire. Par défaut, \code{NULL}.}

\item{weight_from}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonne pour la pondération les zones initiales, utilisée pour traiter les fusions.
Par defaut, \code{NULL} : les zones ont le même poids.}

\item{weight_to}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonne pour la pondération les zones finales, utilisée pour traiter les scissions.
Par defaut, \code{NULL} : les zones ont le même poids.}

\item{id_cols}{\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}} Colonnes identifiant de façon unique chaque observation.
Pris en compte pour réduire la base (option \code{reduce}) ou recalculer les variables.
Par défaut, \code{NULL}.}

\item{reduce}{Supprimer les lignes doublons en cas de fusion de zones.  Par défaut, \code{TRUE}.}

\item{infos}{Ajouter les  colonnes générées par la fonction pour les
calculs intermédiaires. Par défaut, \code{FALSE}.}
}
\value{
Une data frame avec un nombre de lignes égal ou inférieur.
}
\description{
La fonction \code{adapt_to_change()} adapte une data frame
aux changements de géographie, pour prendre en compte les
zones qui ont fusionnées ou qui se sont scindées.
\itemize{
\item Pour des fusions : réduit le nombre de lignes en supprimant les doublons, recalcule des effectifs et des moyennes, détermine des catégories majoritaires.
\item Pour des scissions : répartit les effectifs d'un parent entre ses descendants.
}
}
\details{
Effectifs ou sommes à recalculer (paramètre \code{sum_cols}) : population,
nombre de logements, d'actifs...
\itemize{
\item En cas de scission, les descendants se partagent l'effectif
de leur ascendant, selon leurs poids respectifs (colonne \code{weight_to}).
\item En cas de fusion, le descendant hérite de la somme des
effectifs de ses ascendants.
}

Moyennes ou ratios a recalculer (paramètre \code{mean_cols}) : salaire moyen,
nombre de personnes par logement...
\itemize{
\item En cas de scission, les descendants héritent de la moyenne
de leur ascendant.
\item en cas de fusion, le descendant hérite de la moyenne
de ses ascendants, pondérée selon leurs poids respectifs (colonne \code{weight_from}).
}

Catégories à recalculer (paramètre \code{cat_cols}) :
\itemize{
\item En cas de fusion, le descendant hérite de la catégorie
majoritaire parmi ses ascendants, compte-tenu de leurs poids respectifs (colonne \code{weight_from})
}

Si \code{infos} vaut \code{TRUE}, les colonnes intermédiaires suivantes,
générées par la fonction \code{adapt_to_change()}, sont conservées dans la data frame  :
\itemize{
\item \code{NB_INI} : Nombre d'observations initiales pour des fusions
\item \code{NB_FIN} : Nombre d'observation finales pour des scissions
\item \code{RATIO_INI} : Poids relatif d'une ligne parmi celles qui vont fusionner
\item \code{RATIo_FIN} : Poids relatif d'une ligne parmi celles qui résultent d'une scisson
}
}
\examples{
## Passer du departement a la region

# Superficie, population et densite par departement en Corse
dep_corse <- data.frame(
  DEP = c("2A", "2B"),
  REG = c("94", "94"),
  POP = c(160814, 182887),
  SUP = c(4014.2	, 4665.6),
  DENS = c(40.1,39.2)
)

# Recalcule les variables et fusionne les lignes
# La superficie (SUP) sert de ponderation pour la densite moyenne (DENS)
dep_corse |> adapt_to_change(
  from = DEP,
  to = REG,
  weight_from = SUP,
  sum_cols = c("POP","SUP"),
  mean_cols = DENS
)

## Changer la geographie des communes

# Deplacements domicile-travail par commune en geographie 2023
data <- data.frame(
  COM23 = c("08053","08294", "60054"),
  IPONDI = c(855,57.1, 398),
  DIST = c(13.4, 22.3, 31.7),
  CO2_HEBDO = c(14478, 24279, 27536)
)

# Changement de geographie de 2023 à 2024
data <- data |> change_cog(
  from = COM23,
  to = "COM24",
  cog_from = 2023,
  cog_to = 2024,
  infos = TRUE
)

# Remarques :
# - les communes 08053 et 08294 fusionnent, la commune 60054 est scindee
# - L'argument infos = TRUE permet d'obtenir la population finale (POP_FIN),
#   qui servira de cle de repartition pour les communes scindees

# Recalcule les variables numeriques et fusionne les lignes
data |> adapt_to_change(
  from = COM23,
  to = COM24,
  sum_cols = c(IPONDI, CO2_HEBDO),
  mean_cols = DIST,

  #' Pondère les moyennes (mean_cols) pour les communes fusionees
  weight_from = IPONDI,

  #' Repartit les effectifs (sum_cols) pour les communes scindees
  weight_to = POP_FIN
)

## Changer la geographie de communes avec une variable identifiante

## Commune 60054 par mode de trasnport (MODTRANS)
data <- data.frame(
  COM23 = c("60054","60054"),
  MODTRANS = c("5", "6"),
  IPONDI = c(374, 19.6),
  DIST = c(29.3, 69.1),
  CO2_HEBDO = c(28999, 2491)
)

# Changement de geographie de 2023 à 2024
data <- data |> change_cog(
  from = COM23,
  to = "COM24",
  cog_from = 2023,
  cog_to = 2024,
  infos = TRUE
)

# Recalcule les variables numeriques et fusionne les lignes
data |> adapt_to_change(
  from = COM23,
  to = COM24,
  sum_cols = c(IPONDI, CO2_HEBDO),
  mean_cols = DIST,

  #' Colonne(s) identifiante(s)
  id_cols = MODTRANS,

  #' Pondère les moyennes (mean_cols) pour les communes fusionées
  weight_from = IPONDI,

  #' Répartit les effectifs (sum_cols) pour les communes scindées
  weight_to = POP_FIN
)
}
